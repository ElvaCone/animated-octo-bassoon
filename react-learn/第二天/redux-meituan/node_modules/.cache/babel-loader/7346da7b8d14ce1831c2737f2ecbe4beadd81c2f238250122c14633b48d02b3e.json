{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst foodsStore = createSlice({\n  name: 'foods',\n  initialState: {\n    foodsList: [],\n    activeIndex: 0,\n    cartList: []\n  },\n  reducers: {\n    setFoodsList(state, action) {\n      state.foodsList = action.payload;\n    },\n    setActiveIndex(state, action) {\n      state.activeIndex = action.payload;\n    },\n    addCartList(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      // console.log('item:', item);\n      if (item) {\n        item.count++;\n        // console.log('count:', item.count);\n      } else {\n        action.payload.count = 1;\n        state.cartList.push(action.payload);\n        // console.log('count:', action.payload.count);\n      }\n    },\n\n    increCartList(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      item.count++;\n    },\n    decreCartList(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      if (item.count !== 0) {\n        item.count--;\n      }\n    },\n    clearCartList(state, action) {\n      state.cartList = [];\n    }\n  }\n});\nconst {\n  setFoodsList,\n  setActiveIndex,\n  addCartList,\n  increCartList,\n  decreCartList,\n  clearCartList\n} = foodsStore.actions;\nconst reducer = foodsStore.reducer;\nconst fetchFoodsList = () => {\n  return async dispatch => {\n    const res = await axios.get('http://localhost:3004/takeaway');\n    dispatch(setFoodsList(res.data));\n  };\n};\nexport { fetchFoodsList, setActiveIndex, addCartList, increCartList, decreCartList, clearCartList };\nexport default reducer;","map":{"version":3,"names":["createSlice","axios","foodsStore","name","initialState","foodsList","activeIndex","cartList","reducers","setFoodsList","state","action","payload","setActiveIndex","addCartList","item","find","id","count","push","increCartList","decreCartList","clearCartList","actions","reducer","fetchFoodsList","dispatch","res","get","data"],"sources":["/home/brown/Downloads/learn/Web3/Github-clone/animated-octo-bassoon/react-learn/第二天/redux-meituan/src/store/modules/takeaway.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nconst foodsStore = createSlice({\n    name: 'foods',\n    initialState: {\n        foodsList: [],\n        activeIndex: 0,\n        cartList: []\n    },\n    reducers: {\n        setFoodsList(state, action) {\n            state.foodsList = action.payload\n        },\n        setActiveIndex(state, action) {\n            state.activeIndex = action.payload\n        },\n        addCartList(state, action) {\n            const item = state.cartList.find((item) => item.id === action.payload.id)\n            // console.log('item:', item);\n            if (item) {\n                item.count++\n                // console.log('count:', item.count);\n            } else {\n                action.payload.count = 1\n                state.cartList.push(action.payload)\n                // console.log('count:', action.payload.count);\n            }\n        },\n        increCartList(state, action) {\n            const item = state.cartList.find((item) => item.id === action.payload.id)\n            item.count++\n        },\n        decreCartList(state, action) {\n            const item = state.cartList.find((item) => item.id === action.payload.id)\n            if (item.count !== 0) {\n                item.count--\n            }\n        },\n        clearCartList(state, action) {\n            state.cartList = []\n        }\n    }\n})\n\nconst { setFoodsList, setActiveIndex, addCartList, increCartList, decreCartList, clearCartList } = foodsStore.actions\nconst reducer = foodsStore.reducer\n\nconst fetchFoodsList = () => {\n    return async (dispatch) => {\n        const res = await axios.get('http://localhost:3004/takeaway')\n        dispatch(setFoodsList(res.data))\n    }\n}\n\nexport { fetchFoodsList, setActiveIndex, addCartList, increCartList, decreCartList, clearCartList }\nexport default reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC3BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACNC,YAAY,CAACC,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,cAAc,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,WAAW,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACzE;MACA,IAAIF,IAAI,EAAE;QACNA,IAAI,CAACG,KAAK,EAAE;QACZ;MACJ,CAAC,MAAM;QACHP,MAAM,CAACC,OAAO,CAACM,KAAK,GAAG,CAAC;QACxBR,KAAK,CAACH,QAAQ,CAACY,IAAI,CAACR,MAAM,CAACC,OAAO,CAAC;QACnC;MACJ;IACJ,CAAC;;IACDQ,aAAa,CAACV,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACzEF,IAAI,CAACG,KAAK,EAAE;IAChB,CAAC;IACDG,aAAa,CAACX,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACzE,IAAIF,IAAI,CAACG,KAAK,KAAK,CAAC,EAAE;QAClBH,IAAI,CAACG,KAAK,EAAE;MAChB;IACJ,CAAC;IACDI,aAAa,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACH,QAAQ,GAAG,EAAE;IACvB;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAAEE,YAAY;EAAEI,cAAc;EAAEC,WAAW;EAAEM,aAAa;EAAEC,aAAa;EAAEC;AAAc,CAAC,GAAGpB,UAAU,CAACqB,OAAO;AACrH,MAAMC,OAAO,GAAGtB,UAAU,CAACsB,OAAO;AAElC,MAAMC,cAAc,GAAG,MAAM;EACzB,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,gCAAgC,CAAC;IAC7DF,QAAQ,CAACjB,YAAY,CAACkB,GAAG,CAACE,IAAI,CAAC,CAAC;EACpC,CAAC;AACL,CAAC;AAED,SAASJ,cAAc,EAAEZ,cAAc,EAAEC,WAAW,EAAEM,aAAa,EAAEC,aAAa,EAAEC,aAAa;AACjG,eAAeE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}